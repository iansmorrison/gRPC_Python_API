/*
Demo of RPC access to a complex-valued signal
We group samples together in a repeated field for efficiency
   but also stream these messages to handle very large signals

Programmer: David G Messerschmitt
5 Feb 2018
*/

syntax = "proto3";

// Python does not make use of .proto packages but this might be useful for
// 	other languages
package complex_signal;

// This version returns samples of a complex signal
// Does this using both repeated samples combined with streaming
// The repeated samples can be used for efficiency by merging them
// 	in a common packet on the wire
// The streaming allows longer signals that would not efficiently
//	fit in a single packet

service ComplexSignal {
  rpc GetSignal (Request) returns (stream Sample);
}


message Request {

	// Phase increment as a fraction of 2*pi
	// According to sampling theorem, must have phaseIncrement < 0.5
	float phaseBegin = 1;
	float phaseIncrement = 2;
	int32 numSamples = 3;
}

message Sample {
	
	// Complex sample has real and imaginary parts
	repeated float real = 1;
	repeated float imag = 2;
}

