# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import complex_exponential_pb2 as complex__exponential__pb2


class ComplexExponentialStub(object):
  """package complex_exponential;

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Query = channel.unary_unary(
        '/ComplexExponential/Query',
        request_serializer=complex__exponential__pb2.Question.SerializeToString,
        response_deserializer=complex__exponential__pb2.Answer.FromString,
        )
    self.SetConfig = channel.unary_unary(
        '/ComplexExponential/SetConfig',
        request_serializer=complex__exponential__pb2.Param.SerializeToString,
        response_deserializer=complex__exponential__pb2.Confirm.FromString,
        )
    self.GetSignal = channel.unary_stream(
        '/ComplexExponential/GetSignal',
        request_serializer=complex__exponential__pb2.Request.SerializeToString,
        response_deserializer=complex__exponential__pb2.Sample.FromString,
        )


class ComplexExponentialServicer(object):
  """package complex_exponential;

  """

  def Query(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSignal(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ComplexExponentialServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Query': grpc.unary_unary_rpc_method_handler(
          servicer.Query,
          request_deserializer=complex__exponential__pb2.Question.FromString,
          response_serializer=complex__exponential__pb2.Answer.SerializeToString,
      ),
      'SetConfig': grpc.unary_unary_rpc_method_handler(
          servicer.SetConfig,
          request_deserializer=complex__exponential__pb2.Param.FromString,
          response_serializer=complex__exponential__pb2.Confirm.SerializeToString,
      ),
      'GetSignal': grpc.unary_stream_rpc_method_handler(
          servicer.GetSignal,
          request_deserializer=complex__exponential__pb2.Request.FromString,
          response_serializer=complex__exponential__pb2.Sample.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ComplexExponential', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
